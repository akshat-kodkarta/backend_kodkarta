# Generated by Django 4.1.7 on 2025-05-07 20:50

from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AIResponse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("query", models.TextField()),
                (
                    "query_type",
                    models.CharField(
                        choices=[
                            ("general", "General Question"),
                            ("security", "Security Question"),
                            ("compliance", "Compliance Question"),
                            ("architecture", "Architecture Question"),
                            ("recommendation", "Recommendation Request"),
                            ("troubleshooting", "Troubleshooting"),
                        ],
                        default="general",
                        max_length=50,
                    ),
                ),
                ("response", models.TextField()),
                (
                    "context_data",
                    models.JSONField(
                        help_text="Context and source information used for the response"
                    ),
                ),
                (
                    "sources",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Source documents/components referenced",
                    ),
                ),
                (
                    "conversation_id",
                    models.CharField(
                        blank=True,
                        help_text="ID to group related queries",
                        max_length=100,
                    ),
                ),
                (
                    "feedback_score",
                    models.IntegerField(
                        blank=True, help_text="User feedback (1-5)", null=True
                    ),
                ),
                ("tokens_used", models.IntegerField(default=0)),
                ("response_time_ms", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "AI Response",
                "verbose_name_plural": "AI Responses",
                "db_table": "ai_response",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="AnomalyDetection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField()),
                (
                    "anomaly_type",
                    models.CharField(
                        choices=[
                            ("access_pattern", "Unusual Access Pattern"),
                            ("dependency_risk", "Dependency Risk"),
                            ("security_issue", "Security Issue"),
                            ("performance", "Performance Anomaly"),
                            ("deployment", "Deployment Anomaly"),
                            ("configuration", "Configuration Anomaly"),
                            ("ai_behavior", "AI Behavior Anomaly"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        default="medium",
                        max_length=20,
                    ),
                ),
                ("detected_at", models.DateTimeField()),
                (
                    "anomaly_data",
                    models.JSONField(help_text="Detailed anomaly information"),
                ),
                (
                    "confidence_score",
                    models.FloatField(help_text="Confidence level (0-1)"),
                ),
                (
                    "baseline_data",
                    models.JSONField(
                        blank=True, default=dict, help_text="Baseline comparison data"
                    ),
                ),
                ("is_false_positive", models.BooleanField(default=False)),
                ("is_resolved", models.BooleanField(default=False)),
                ("remediation_steps", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Anomaly Detection",
                "verbose_name_plural": "Anomaly Detections",
                "db_table": "anomaly_detection",
                "ordering": ["-severity", "-detected_at"],
            },
        ),
        migrations.CreateModel(
            name="Insight",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField()),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("security", "Security"),
                            ("performance", "Performance"),
                            ("architecture", "Architecture"),
                            ("anomaly", "Anomaly"),
                            ("recommendation", "Recommendation"),
                            ("compliance", "Compliance"),
                            ("dependency", "Dependency"),
                            ("risk", "Risk"),
                            ("ai_governance", "AI Governance"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        default="medium",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("open", "Open"),
                            ("in_progress", "In Progress"),
                            ("resolved", "Resolved"),
                            ("dismissed", "Dismissed"),
                            ("false_positive", "False Positive"),
                        ],
                        default="open",
                        max_length=20,
                    ),
                ),
                (
                    "data",
                    models.JSONField(
                        help_text="Detailed insight data, including evidence"
                    ),
                ),
                (
                    "recommendation",
                    models.TextField(
                        help_text="Specific action recommended to address the insight"
                    ),
                ),
                (
                    "confidence_score",
                    models.FloatField(
                        default=0.0, help_text="AI confidence in this insight (0-1)"
                    ),
                ),
                ("is_resolved", models.BooleanField(default=False)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Insight",
                "verbose_name_plural": "Insights",
                "db_table": "insight",
                "ordering": ["-severity", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="KnowledgeGraph",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                (
                    "graph_type",
                    models.CharField(
                        choices=[
                            ("product", "Product Graph"),
                            ("component", "Component Graph"),
                            ("security", "Security Graph"),
                            ("dependency", "Dependency Graph"),
                            ("architecture", "Architecture Graph"),
                            ("full", "Full System Graph"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "graph_data",
                    models.JSONField(
                        help_text="Knowledge graph structure and relationships"
                    ),
                ),
                ("metadata", models.JSONField(blank=True, default=dict)),
                ("node_count", models.IntegerField(default=0)),
                ("edge_count", models.IntegerField(default=0)),
                ("is_published", models.BooleanField(default=False)),
                ("last_updated", models.DateTimeField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Knowledge Graph",
                "verbose_name_plural": "Knowledge Graphs",
                "db_table": "knowledge_graph",
                "ordering": ["-updated_at"],
            },
        ),
    ]
