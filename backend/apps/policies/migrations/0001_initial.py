# Generated by Django 4.1.7 on 2025-05-07 20:50

from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ComplianceResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("compliant", "Compliant"),
                            ("non_compliant", "Non-Compliant"),
                            ("warning", "Warning"),
                            ("error", "Error"),
                            ("not_applicable", "Not Applicable"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        default="medium",
                        max_length=20,
                    ),
                ),
                (
                    "details",
                    models.JSONField(help_text="Detailed compliance check results"),
                ),
                (
                    "evidence",
                    models.TextField(
                        blank=True, help_text="Evidence supporting the result"
                    ),
                ),
                ("remediation_steps", models.TextField(blank=True)),
                ("is_fixed", models.BooleanField(default=False)),
                ("fixed_at", models.DateTimeField(blank=True, null=True)),
                ("checked_at", models.DateTimeField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Compliance Result",
                "verbose_name_plural": "Compliance Results",
                "db_table": "compliance_result",
                "ordering": ["-severity", "-checked_at"],
            },
        ),
        migrations.CreateModel(
            name="PolicyRule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField()),
                (
                    "rule_type",
                    models.CharField(
                        choices=[
                            ("condition", "Condition Check"),
                            ("pattern", "Pattern Match"),
                            ("threshold", "Threshold Check"),
                            ("existence", "Existence Check"),
                            ("scan", "Security Scan"),
                            ("ai", "AI/ML Check"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "target_component_type",
                    models.CharField(
                        help_text="Type of component this rule applies to",
                        max_length=100,
                    ),
                ),
                (
                    "target_resource_pattern",
                    models.CharField(
                        blank=True,
                        help_text="Pattern to match resources",
                        max_length=255,
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        default="medium",
                        max_length=20,
                    ),
                ),
                ("condition", models.JSONField(help_text="Rule conditions and checks")),
                (
                    "remediation",
                    models.TextField(
                        blank=True, help_text="Instructions for remediation"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "is_blocking",
                    models.BooleanField(
                        default=False,
                        help_text="If true, blocks deployments when violated",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Policy Rule",
                "verbose_name_plural": "Policy Rules",
                "db_table": "policy_rule",
                "ordering": ["policy", "-severity"],
            },
        ),
        migrations.CreateModel(
            name="ScanJob",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "scan_type",
                    models.CharField(
                        choices=[
                            ("security", "Security Scan"),
                            ("compliance", "Compliance Scan"),
                            ("discovery", "Discovery Scan"),
                            ("dependency", "Dependency Scan"),
                            ("ai_audit", "AI Audit"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("running", "Running"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=50,
                    ),
                ),
                (
                    "configuration",
                    models.JSONField(default=dict, help_text="Scan job configuration"),
                ),
                ("result", models.JSONField(default=dict)),
                (
                    "scheduled",
                    models.BooleanField(
                        default=False, help_text="Is this a scheduled scan"
                    ),
                ),
                ("items_scanned", models.IntegerField(default=0)),
                ("issues_found", models.IntegerField(default=0)),
                ("started_at", models.DateTimeField()),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Scan Job",
                "verbose_name_plural": "Scan Jobs",
                "db_table": "scan_job",
                "ordering": ["-started_at"],
            },
        ),
        migrations.CreateModel(
            name="SecurityPolicy",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField()),
                (
                    "policy_type",
                    models.CharField(
                        choices=[
                            ("security", "Security Policy"),
                            ("compliance", "Compliance Standard"),
                            ("governance", "Governance Policy"),
                            ("custom", "Custom Policy"),
                            ("ai_governance", "AI Governance"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        default="medium",
                        max_length=20,
                    ),
                ),
                (
                    "standard_reference",
                    models.CharField(
                        blank=True,
                        help_text="Reference to external standard (ISO, NIST, etc.)",
                        max_length=100,
                    ),
                ),
                (
                    "policy_content",
                    models.JSONField(help_text="Policy definition and rules"),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "is_system",
                    models.BooleanField(
                        default=False,
                        help_text="System-defined policies vs user-created",
                    ),
                ),
                ("tags", models.JSONField(blank=True, default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Security Policy",
                "verbose_name_plural": "Security policies",
                "db_table": "security_policy",
                "ordering": ["-created_at"],
            },
        ),
    ]
